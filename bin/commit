#!/usr/bin/env bash

API_KEY=""
MODEL_NAME="gemini-2.0-flash"
PYTHON_PATH="/c/Users/root4nishant/AppData/Local/Programs/Python/Python313/python.exe"


source "$(dirname "$0")/../config/config.sh"

GEMINI_URL="https://generativelanguage.googleapis.com/v1beta/models/$MODEL_NAME:generateContent"
MAX_LENGTH=2000

PREFIX=""
for i in "$@"; do
  if [[ "$i" == "--" ]]; then
    shift
    PREFIX="$*"
    break
  fi
done

if [[ -z $(git status --porcelain) ]]; then
    echo "No changes to commit."
    exit 0
fi

git add .

DIFF=$(git diff --cached)
if [ ${#DIFF} -gt $MAX_LENGTH ]; then
    DIFF="${DIFF:0:$MAX_LENGTH}..."
fi

ESCAPED_DIFF=$(printf '%s' "$DIFF" | "$PYTHON_PATH" -c 'import json,sys; print(json.dumps(sys.stdin.read())[1:-1])')

# === Show diff sent to Gemini ===
# echo "DIFF SENT TO GEMINI:"
# echo "$ESCAPED_DIFF"

PROMPT="Write only one concise Git commit message for the following code changes. No explanations, no formatting, just the message in maximum 5-10 words."

JSON_PAYLOAD=$(cat <<EOF
{
  "contents": [
    {
      "parts": [
        {
          "text": "$PROMPT\n\n$ESCAPED_DIFF"
        }
      ]
    }
  ]
}
EOF
)

RESPONSE=$(curl -s -X POST \
  -H "Content-Type: application/json" \
  -d "$JSON_PAYLOAD" \
  "$GEMINI_URL?key=$API_KEY")

echo "Gemini API Response:"
echo "$RESPONSE"

COMMIT_MSG=$(echo "$RESPONSE" | grep -oP '"text":\s*"\K[^"]+' | head -n 1)

if [[ -z "$COMMIT_MSG" ]]; then
    echo "Gemini did not return a valid commit message. Using fallback."
    COMMIT_MSG="Auto commit"
fi

if [[ -n "$PREFIX" ]]; then
  CLEAN_PREFIX=$(echo "$PREFIX" | awk '{print tolower($1)}')
  CLEAN_COMMIT=$(echo "$COMMIT_MSG" | sed -E "s/^($CLEAN_PREFIX[:]?)[[:space:]]+//i")
  FINAL_COMMIT_MSG="$PREFIX $CLEAN_COMMIT"
else
  FINAL_COMMIT_MSG="$COMMIT_MSG"
fi

FINAL_COMMIT_MSG=$(echo "$FINAL_COMMIT_MSG" | sed 's/\\n//g' | tr -d '\n\r')

echo "Commit message: $FINAL_COMMIT_MSG"

git commit -m "$FINAL_COMMIT_MSG"
git push

echo "Pushed, Done!"
